class Solution(object):
    def find_number(self, nums_a: List[int], nums_b: List[int]) -> int:
        """
        You are given two sorted arrays A[1..n] and B[1..(n + 1)]. Except for one number,
        A and B are identical. Find the index of this extra element in O(log(n)) time.
        """
        if len(nums_a) == 1:
            if nums_a[0] == nums_b[0]:
                return nums_b[1]
            else:
                return nums_b[0]
        else:
            mid_a = len(nums_a) // 2
            mid_b = len(nums_b) // 2
            if mid_a == mid_b:
                if sum(nums_a[:mid_a]) == sum(nums_b[:mid_a]):
                    return self.find_number(nums_a[mid_a:], nums_b[mid_a:])
                else:
                    return self.find_number(nums_a[:mid_a], nums_b[:mid_a])
            else:
                mid = mid_b
                if sum(nums_a[:mid]) == sum(nums_b[:mid]):
                    return self.find_number(nums_a[mid:], nums_b[mid:])
                else:
                    return self.find_number(nums_a[:mid], nums_b[:mid])

if __name__ == "__main__":
    nums_a = [21,32,43,54,66,77,88,99,100,101]
    nums_b = [21,32,43,54,66,77,88,93,99,100,101]
    find = Solution()
    print(find.find_number(nums_a, nums_b))
